name: Build HackMD App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.4'
        
    - name: Install dependencies
      run: |
        brew update
        brew install create-dmg || true
      
    - name: Check entitlements file
      run: |
        cat HackMD/HackMD.entitlements || echo "No entitlements file found"
        
    - name: Examine project structure
      run: |
        find . -name "*.xcodeproj" -type d
        ls -la HackMD.xcodeproj || ls -la */HackMD.xcodeproj
        
    - name: Build for CI (disabling code signing)
      run: |
        # Use xcodebuild with special flags for CI environment
        xcodebuild clean build \
          -project HackMD.xcodeproj \
          -scheme "HackMD" \
          -configuration Release \
          -derivedDataPath build \
          CODE_SIGN_IDENTITY=- \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          CODE_SIGN_ENTITLEMENTS= \
          OTHER_CODE_SIGN_FLAGS="--options=runtime"
        
    - name: Package application
      run: |
        mkdir -p output
        APP_PATH=$(find build -name "*.app" -type d)
        if [ -d "$APP_PATH" ]; then
          echo "Found app at: $APP_PATH"
          cp -r "$APP_PATH" output/
          # Create a zip as fallback
          cd output
          zip -r ../HackMD.zip *
          cd ..
          
          # Try create DMG if possible
          mkdir -p dmg-build
          cp -r "$APP_PATH" dmg-build/
          create-dmg \
            --volname "HackMD" \
            --window-size 600 400 \
            --app-drop-link 450 180 \
            --icon "HackMD.app" 150 180 \
            HackMD.dmg \
            dmg-build/ || echo "DMG creation failed, using ZIP instead"
        else
          echo "No app found in build directory"
          find build -type d -name "*.app"
          exit 1
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: HackMD-app
        path: |
          HackMD.dmg
          HackMD.zip
        if-no-files-found: warn
        
    - name: Upload to Release
      if: github.event_name == 'release'
      uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./HackMD.zip
        asset_name: HackMD.zip
        asset_content_type: application/zip
